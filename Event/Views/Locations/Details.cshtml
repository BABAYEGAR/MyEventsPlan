@using Event.Data.Objects.Entities
@using MyEventPlan.Data.DataContext.DataContext
@model Location
@{
    ViewBag.Title = "View";
    ViewBag.Header = "View location";
    Layout = "../Shared/_LayoutForm.cshtml";
    var userDb = new AppUserDataContext();
    var role = Session["role"] as Role;
}
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="@Url.Action("Dashboard", "Home")">My Dashboard</a>
    </li>
    <li class="breadcrumb-item">
        <a href="@Url.Action("Index", "Locations")">Locations</a>
    </li>
</ol>
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Name)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Name)
    </dd>
    @if ((role != null) && (role.Name == "Platform Administrator"))
    {
        if (Model.CreatedBy != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </dt>

            <dd>

                @(userDb.AppUsers.Find(Model.CreatedBy).Lastname + "" + userDb.AppUsers.Find(Model.CreatedBy).Firstname)

            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateLastModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateLastModified)
        </dd>
        if (Model.LastModifiedBy != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.LastModifiedBy)
            </dt>

            <dd>

                @(userDb.AppUsers.Find(Model.LastModifiedBy).Firstname + " " + userDb.AppUsers.Find(Model.LastModifiedBy).Lastname)

            </dd>
        }
    }

</dl>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-xs icon-pencil" data-toggle="modal" data-target="#myModal">
    Edit Location
</button>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Edit location</h4>
            </div>
            <div class="modal-body">
                @{
                    Html.RenderPartial("EditLocationModal", Model);
                }
            </div>
        </div>
    </div>

</div>
<!-- Button trigger modal -->
<button type="button" class="btn btn-danger btn-xs icon-trash" data-toggle="modal" data-target="#myModal1">
    Delete Package
</button>

<!-- Modal -->
<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel1">Delete Location</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Delete", "Locations", new {id = Model.LocationId}))
                {
                    @Html.AntiForgeryToken()
                    <p>
                        Are you sure you want to delete the location?
                    </p>
                    <div class="form-actions no-color">
                        <input type="submit" value="Delete" class="btn btn-danger pull-right"/>
                    </div>
                }
            </div>
        </div>
    </div>

</div>