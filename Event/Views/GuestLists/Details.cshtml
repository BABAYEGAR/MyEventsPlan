@using Event.Data.Objects.Entities
@using MyEventPlan.Data.DataContext.DataContext
@model GuestList
@{
    ViewBag.Title = "View";
    Layout = "../Shared/Layout/_LayoutView.cshtml";
    ViewBag.TableHeader = Model.Name + " Guest-List";
    ViewBag.TableSubHeader = "Details of Guest-List";
    var events = Session["event"] as Event;

    var db = new EventDataContext();
    var meals = db.MealChoices.Where(n => n.GuestListId == Model.GuestListId).ToList();

    var mealChoice = new MealChoice();
    mealChoice.GuestListId = Model.GuestListId;

    var customQuestions = db.CustomQuestions.Where(n => n.GuestListId == Model.GuestListId).ToList();
    var questions = new CustomQuestion();
}
@section links{
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Events")">My Events</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Details", "Events", new {id = Model.EventId})">Event Dashboard</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "GuestLists", new {eventId = Model.EventId})">Event Guest-Lists</a>
        </li>
    </ol>
}
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Event.Name)
    </dt>


    <dd>
        @if (events != null)
        {
            @events.Name
        }

    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Name)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Name)
    </dd>
</dl>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary  fa fa-pencil" data-toggle="modal" data-target="#myModal">
    Edit Guest List
</button>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Edit guest list</h4>
            </div>
            <div class="modal-body">
                @{
                    Html.RenderPartial("EventPlanning/EditGuestListModal", Model);
                }
            </div>
        </div>
    </div>

</div>
@Html.ActionLink("Guests List", "Index", "Guests", new {guestListId = Model.GuestListId}, new {@class = "btn  btn-default fa fa-list"})
<!-- Button trigger modal -->
<button type="button" class="btn btn-danger  fa fa-trash" data-toggle="modal" data-target="#myModal1">
    Delete
</button>

<!-- Modal -->
<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel1">Delete Guest-List</h4>
            </div>@using (Html.BeginForm("Delete", "GuestLists", new {id = Model.GuestListId}))
                  {
                      <div class="modal-body">

                          @Html.AntiForgeryToken()
                          <p>
                              Are you sure you want to remove the guest list?
                          </p>

                      </div>
                      <div class="modal-footer">
                          <input type="submit" value="Remove" class="btn btn-danger pull-right fa fa-trash"/>
                          <input type="button" data-dismiss="modal" value="Cancel" class="btn btn-default pull-left"/>
                      </div>
                  }
        </div>
    </div>

</div>
@section secondBody
{
    <div class="card">

        <div class="card-content table-responsive">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-default  fa fa-plus pull-right" data-toggle="modal" data-target="#myModals">
                Add Meal Choice
            </button>

            <!-- Modal -->
            <div class="modal fade" id="myModals" tabindex="-1" role="dialog" aria-labelledby="myModalLabels">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title" id="myModalLabels">Add a new meal choice</h4>
                        </div>
                        <div class="modal-body">
                            @{
                                Html.RenderPartial("EventPlanning/CreateMealChoiceModal", mealChoice);
                            }
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-header" data-background-color="purple">
                <h4 class="title">Meal Choices</h4>
                <p class="category">List of meal choices for the guest-list</p>
            </div>
            <table class="table table-hover" id="grid">
                <thead>
                <tr>
                    <th>
                        @Html.Display("Meal Choice")
                    </th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in meals)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Choice)
                        </td>
                        <td>
                            @Html.ActionLink("Open", "Details","MealChoices", new {id = item.MealChoiceId}, new {@class = "btn btn-default btn-lg fa fa-folder-open"})
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card">

        <div class="card-content table-responsive">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-default  fa fa-plus pull-right" data-toggle="modal" data-target="#myModals1">
                Add Question
            </button>

            <!-- Modal -->
            <div class="modal fade" id="myModals1" tabindex="-1" role="dialog" aria-labelledby="myModalLabels1">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title" id="myModalLabels1">Add a new question</h4>
                        </div>
                        <div class="modal-body">
                            @{
                                Html.RenderPartial("EventPlanning/CreateCustomQuestionModal", questions);
                            }
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-header" data-background-color="purple">
                <h4 class="title">Custom Question</h4>
                <p class="category">List of custom questions for the guest-list</p>
            </div>
            <table class="table table-hover" id="grid1">
                <thead>
                <tr>
                    <th>
                        @Html.Display("Question")
                    </th>
                    <th>
                        @Html.Display("Answer")
                    </th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in customQuestions)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Question)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Answer)
                        </td>
                        <td>
                            @Html.ActionLink("Open", "Details","CustomQuestions", new {id = item.CustomQuestionId}, new {@class = "btn btn-default btn-lg fa fa-folder-open"})
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}