@model Event.Data.Objects.Entities.Prospect
@{
    Layout = "../Shared/_LayoutModal.cshtml";
}
@using (Html.BeginForm("Create", "Prospects", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal row-fluid"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    <div class="control-group">
        @Html.LabelFor(model => model.Name, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Color, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Color, new {htmlAttributes = new {@class = "span8 jscolor"}})
            @Html.ValidationMessageFor(model => model.Color, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.EventTypeId, "EventType", new {@class = "control-label"})
        <div class="controls">
            @Html.DropDownList("EventTypeId", null, new {@class = "span8"})
            @Html.ValidationMessageFor(model => model.EventTypeId, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.TargetBudget, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.TargetBudget, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.TargetBudget, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.StartDate, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "span8 startDate"}})
            @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.EndDate, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "span8 endDate"}})
            @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.StartTime, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.StartTime, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.StartTime, "", new {@class = "text-danger"})
        </div>
    </div>


    <div class="control-group">
        @Html.LabelFor(model => model.EndTime, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.EndTime, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.EndTime, "", new {@class = "text-danger"})
        </div>
    </div>


    <div class="control-group">
        <div class="controls">
            <input type="submit" value="Create" class="btn btn-default"/>
        </div>
    </div>
}
@section scripts
{

    <script src="~/Scripts/jscolor.min.js"></script>
}