@using MyEventPlan.Data.Service.Enum
@model Event.Data.Objects.Entities.Appointment
@{
    Layout = "../../Shared/Layout/_LayoutModal.cshtml";
}
@section css{
    

}
@using (Html.BeginForm("CreateNewAppointment", "Appointments", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal"}))
{
    <div class="modal-body">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="mui-row">
            <div class="mui-textfield mui-col-md-6">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {placeholder = "Enter appointment Name", id = "eventTitle"}})

                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
            <div class="mui-select mui-col-md-6">
                @Html.DropDownListFor(m => m.For, EnumHelper.GetSelectList(typeof(AppointmentType)), "Appointment is for?", new {@class = "", id = "selectFor"})
                @Html.ValidationMessageFor(model => model.For, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="mui-select mui-col-md-12" id="events">
            @Html.DropDownListFor(m => m.EventId, (SelectList) ViewBag.EventTypeId, "Select an Event", new {@class = "", id = "eventId"})
            @Html.ValidationMessageFor(model => model.EventId, "", new {@class = "text-danger"})
        </div>
            <div class="mui-textfield mui-col-md-12">
                @Html.EditorFor(model => model.Location, new {htmlAttributes = new {placeholder = "Enter the Appointment Location", id = "eventLocation"}})
                @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
            </div>
            <div class="mui-textfield mui-col-md-12">
                @Html.TextAreaFor(model => model.Notes, new {placeholder = "Enter the Appointment Note", id = "eventNote"})

                @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
            </div>
        <div class="mui-row">
            <div class="mui-textfield mui-col-md-6">
                @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {placeholder = "Select the Event Start Date", id = "eventStartDate"}})
                @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
            </div>
            <div class="mui-textfield mui-col-md-6">
                @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {placeholder = "Select the Event End Date", id = "eventEndDate"}})
                @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-sm-9 col-xs-12">
                @Html.DropDownListFor(m => m.ContactId, (SelectList) ViewBag.ContactId, new {@class = "form-control select2_multiple selectpicker  col-md-12", multiple = "multiple", width = "100px"})
                @Html.ValidationMessageFor(model => model.ContactId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-control col-md-6">
            @Html.EditorFor(model => model.SetReminder, new {htmlAttributes = new {placeholder = "", id = "setReminder"}})
            @Html.LabelFor(model => model.SetReminder)
            @Html.ValidationMessageFor(model => model.SetReminder, "", new {@class = "text-danger"})
        </div>
        <div class="form-control col-md-6">
            @Html.EditorFor(model => model.SendEmailReminder, new {htmlAttributes = new {placeholder = "", id = "sendEmailReminder" } })
            @Html.LabelFor(model => model.SendEmailReminder)
            @Html.ValidationMessageFor(model => model.SendEmailReminder, "", new {@class = "text-danger"})
        </div>
       
        <div class="mui-textfield mui-col-md-12">
            @Html.EditorFor(model => model.ReminderLength, new {htmlAttributes = new {placeholder = "Enter the Length", id = "reminderLength"}})
            @Html.ValidationMessageFor(model => model.ReminderLength, "", new {@class = "text-danger"})
        </div>
        <div class="mui-row">
            <div class="mui-select mui-col-md-6">
                @Html.DropDownListFor(m => m.ReminderLengthType, EnumHelper.GetSelectList(typeof(ReminderLength)), "Select the length", new {@class = "", id = "reminderLengthType"})
                @Html.ValidationMessageFor(model => model.ReminderLengthType, "", new {@class = "text-danger"})
            </div>
            <div class="mui-select mui-col-md-6">
                @Html.DropDownListFor(m => m.ReminderRepeat, EnumHelper.GetSelectList(typeof(ReminderRepeat)), "Select a repeat", new {@class = "", id = "reminderRepeat"})
                @Html.ValidationMessageFor(model => model.ReminderRepeat, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" id="btnPopupNewCancel" data-dismiss="modal" class="btn btn-default">Cancel</button>
        <button type="button" id="btnPopupSave" data-dismiss="modal" class="btn btn-primary">Save event</button>
    </div>
}
@section scripts{
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.2/js/bootstrap-select.min.js"></script>

    <script>
        $('.selectpicker').selectpicker();

    </script>
    <script>
        $(window)
            .load(function() {
                $("#events").hide();
                $("#selectFor")
                    .change(function() {
                        if ($("#selectFor").val() == "0") {
                            $("#events").show();
                        } else if ($("#selectFor").val() == "1") {
                            $("#events").hide();
                        }
                    });
            });
    </script>

}