@model Event.Data.Objects.Entities.Event
@{
    ViewBag.Title = "Create";
    ViewBag.Header = "Edit Event";
    Layout = "../Shared/_LayoutForm.cshtml";
}
@section css{
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet"/>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="~/Content/DateTimePicker/jquery.datetimepicker.min.css" rel="stylesheet"/>
    <link href="~/Content/Color/spectrum.css" rel="stylesheet"/>
}
@using (Html.BeginForm("Edit", "Events", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal row-fluid"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.EventId)
    @Html.HiddenFor(m => m.DateCreated)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.StaffId)
    @Html.HiddenFor(m => m.EventPlannerId)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    <div class="mui-textfield mui-textfield--float-label">
        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {placeholder = "Event Name"}})
        @Html.LabelFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
    </div>

    <div class="mui-textfield mui-textfield--float-label">
        @Html.LabelFor(model => model.Color)
        @Html.EditorFor(model => model.Color, new {htmlAttributes = new {@class = "", id = "color"}})
        @Html.ValidationMessageFor(model => model.Color, "", new {@class = "text-danger"})
    </div>

    <div class="mui-select">
        @Html.DropDownListFor(m => m.EventTypeId, null, "Select the Event Type", new {@class = ""})
        @Html.ValidationMessageFor(model => model.EventTypeId, "", new {@class = "text-danger"})
    </div>

    <div class="mui-textfield mui-textfield--float-label">
        @Html.EditorFor(model => model.TargetBudget, new {htmlAttributes = new {placeholder = "Target Budget"}})
        @Html.LabelFor(model => model.TargetBudget)
        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
    </div>
    <div class="mui-textfield mui-textfield--float-label">
        @Html.EditorFor(model => model.EventDate, new {htmlAttributes = new {placeholder = "Event Date", id = "datetimepicker5"}})
        @Html.LabelFor(model => model.EventDate)
        @Html.ValidationMessageFor(model => model.EventDate, "", new {@class = "text-danger"})
    </div>
    <div class="mui-textfield mui-textfield--float-label">
        @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {placeholder = "Start Date", id = "datetimepicker6"}})
        @Html.LabelFor(model => model.StartDate)
        @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
    </div>
    <div class="mui-textfield mui-textfield--float-label">
        @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {placeholder = "End Date", id = "datetimepicker7"}})
        @Html.LabelFor(model => model.EndDate)
        @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
    </div>


    <div class="control-group">
        <div class="controls">
            <input type="submit" value="Update Event" class="btn btn-default"/>
        </div>
    </div>
}
@section scripts
{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Content/DateTimePicker/jquery.datetimepicker.full.min.js"></script>
    <script src="~/Content/Color/spectrum.js"></script>
    <script type="text/javascript">


        jQuery('#datetimepicker5')
            .datetimepicker({
                format: 'm-d-Y',
                onShow: function(ct) {
                    this.setOptions({
                        minDate: 0
                    });

                },
                timepicker: false
            });
        jQuery('#datetimepicker6')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function(ct) {
                    this.setOptions({
                        minDate: 0
                    });
                }
            });
        jQuery('#datetimepicker7')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function(ct) {
                    this.setOptions({
                        minDate: jQuery('#datetimepicker6').val()
                    });
                }
            });
        $("#color")
            .spectrum({
                preferredFormat: "hex"
            });
        $('input.number')
            .keyup(function(event) {

                if (event.which >= 37 && event.which <= 40) {
                    event.preventDefault();
                }
                var $this = $(this);
                var num = $this.val().replace(/,/g, '');
                // the following line has been simplified. Revision history contains original.
                $this.val(num.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));
            });
    </script>
}