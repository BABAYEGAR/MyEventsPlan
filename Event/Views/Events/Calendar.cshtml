@using Event.Data.Objects.Entities
@model Event
@{
    ViewBag.Title = "Calendar";
    ViewBag.Header = "Calendar";
    ViewBag.SubHeader = "Event Calendar";
    Layout = "../Shared/Layout/_LayoutCalendar.cshtml";

    var loggedinuser = Session["myeventplanloggedinuser"] as AppUser;
}
@section links{

    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Dashboard", "Home")">My Dashboard</a>
        </li>
    </ol>
}
@section add {
    @*@Html.ActionLink("Manage ToDo(s)", "Index", "ToDoes", new { }, new { @class = "btn btn-primary fa fa-wrench pull-right" })*@
}
@section css{
    <link href="~/Content/DateTimePicker/jquery.datetimepicker.min.css" rel="stylesheet"/>
    <link href="~/Content/Color/spectrum.css" rel="stylesheet"/>
}
<div id="popupUpdateEventForm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel">Update Event</h4>
            </div>
            @{
                Html.RenderPartial("EventPlanning/UpdateCalendarEvent", Model);
            }
        </div>
    </div>

</div>
<div id="popupSaveEventForm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel1">Create New Event</h4>
            </div>
            @{
                Html.RenderPartial("EventPlanning/CreateCalendarEvent", Model);
            }
        </div>
    </div>

</div>
<div class="panel-body">
    <div id="calendar" class="monthly">
    </div>
</div>
<div id="fc_create" data-toggle="modal" data-target="#popupSaveEventForm"></div>
<div id="fc_edit" data-toggle="modal" data-target="#popupUpdateEventForm"></div>
@section scripts{
    <script src="~/Content/DateTimePicker/jquery.datetimepicker.full.min.js"></script>
    <script src="~/Content/Color/spectrum.js"></script>
    <script type="text/javascript">

        $.datetimepicker.setLocale('en');
        jQuery('#eventDate')
            .datetimepicker({
                format: 'm-d-Y',
                onShow: function() {
                    this.setOptions({
                        minDate: 0
                    });

                },
                timepicker: false
            });
        jQuery('#eventStartDate')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function() {
                    this.setOptions({
                        minDate: 0
                    });
                }
            });
        jQuery('#eventEndDate')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function() {
                    this.setOptions({
                        minDate: jQuery('#eventStartDate').val()
                    });
                }
            });
        jQuery('#eventStartDates')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function() {
                    this.setOptions({
                    });
                }
            });
        jQuery('#eventEndDates')
            .datetimepicker({
                format: 'm-d-Y H:i',
                onShow: function() {
                    this.setOptions({
                    });
                }
            });

        $("#eventColor")
            .spectrum({
                preferredFormat: "hex"
            });
        $("#eventColors")
            .spectrum({
                preferredFormat: "hex"
            });


        $('input.number')
            .keyup(function(event) {

                if (event.which >= 37 && event.which <= 40) {
                    event.preventDefault();
                }
                var $this = $(this);
                var num = $this.val().replace(/,/g, '');
                // the following line has been simplified. Revision history contains original.
                $this.val(num.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));
            });
    </script>
    <script>
        $(document)
            .ready(function() {
                $('#calendar')
                    .fullCalendar({
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'month,agendaWeek,agendaDay'
                        },
                        defaultView: 'month',
                        editable: true,
                        allDaySlot: false,
                        timezone: 'local',
                        selectable: true,
                        slotMinutes: 15,
                        events: '@Url.Action("GetMyEvents", "Events")',
                        eventClick: function(event) {
                            ShowUpdateEventPopup(event);

                        },

                        eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc) {
                            if (confirm("Confirm Move?")) {
                                UpdateEvent(event.id, event.start, event.end);
                            } else {
                                revertFunc();
                            }
                        },

                        eventResize: function(event, dayDelta, minuteDelta, revertFunc) {

                            if (confirm("Confirm Change Event Length?")) {
                                UpdateEvent(event.id, event.start, event.end);
                            } else {
                                revertFunc();
                            }
                        },


                        dayClick: function(date) {
                            ShowNewEventPopup(date);
                        }

                    });
            });

        $('#btnPopupUpdateCancel')
            .click(function() {
                ClearPopupFormValues();
                $('#popupUpdateEventForm').hide();
            });
        $('#btnPopupNewCancel')
            .click(function() {
                ClearPopupFormValues();
                $('#popupSaveEventForm').hide();
            });

        //save a new event
        $('#btnPopupSave')
            .click(function() {
                $('#popupSaveEventForm').hide();

                var dataRow = {
                    'Title': $('#eventTitle').val(),
                    'NewEventStartDate': $('#eventStartDate').val(),
                    'NewEventEndDate': $('#eventEndDate').val(),
                    'appUserId': @loggedinuser.AppUserId,
                    'Color': $('#eventColor').val(),
                    'Budget': $('#eventBudget').val(),
                    'plannerId': @loggedinuser.EventPlannerId,
                    'type': $('#eventType').val(),
                    'eventDate': $('#eventDate').val()
                };
                ClearPopupFormValues();

                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("CreateNewEvent", "Events")",
                    data: dataRow,
                    success: function(response) {
                        if (response === 'True') {
                            $('#calendar').fullCalendar('refetchEvents');
                            alert('New event saved!');
                        } else {
                            alert('Error, could not save event!');
                        }
                    }
                });
            });


        //update event
        $('#btnPopupUpdate')
            .click(function() {
                $('#popupUpdateEventForm').hide();

                if (confirm("Confirm move?")) {
                    UpdateEvent(event.id, event.start, event.end);
                } else {
                    window.revertFunc();
                }
            });

        function ShowUpdateEventPopup(event) {
            ClearPopupFormValues();
            $('#fc_edit').click();
            $('#eventTitles').val(event.title);
            $('#eventColors').val(event.color);
            $("#eventColors")
                .spectrum({
                    color: event.color,
                    preferredFormat: "hex"
                });
            $('#eventStartDates').val((event.start).format('D/M/Y HH:mm'));
            $('#eventEndDates').val(event.end.format('D/M/Y HH:mm'));
            $('#eventId').val(event.id);
        }

        function ShowNewEventPopup(date) {
            ClearPopupFormValues();
            $('#fc_create').click();
            $('#eventStartDate').val(date.format('D/M/Y HH:mm'));
        }

        function ClearPopupFormValues() {
            $('#eventID').val("");
            $('#eventTitle').val("");
            $('#eventDateTime').val("");
            $('#eventDuration').val("");
        }

        function UpdateEvent(eventId, eventStart, eventEnd) {

            var dataRow = {
                'ID': eventId,
                'NewEventStart': eventStart,
                'NewEventEnd': eventEnd
            };
            $.ajax({
                type: 'POST',
                url: "@Url.Action("UpdateEvent", "Events")",
                dataType: "json",
                contentType: "application/json",
                data: JSON.stringify(dataRow)
            });

        }

        //amount indicator
        $('input.number')
            .keyup(function(event) {

                if (event.which >= 37 && event.which <= 40) {
                    event.preventDefault();
                }
                var $this = $(this);
                var num = $this.val().replace(/,/g, '');
                // the following line has been simplified. Revision history contains original.
                $this.val(num.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));
            });
    </script>
}