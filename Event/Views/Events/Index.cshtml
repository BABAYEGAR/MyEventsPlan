@using Event.Data.Objects.Entities
@model IEnumerable<Event>
@{
    ViewBag.Title = "List";
    ViewBag.TableHeader = "My Events";
    ViewBag.TableSubHeader = "List of all my events";
      Layout = "../Shared/Layout/_LayoutTable.cshtml";
    var packageSubscribed = Session["subscribe"] as EventPlannerPackageSetting;
    var events = new Event();
}
@section add {
    @if (packageSubscribed != null && packageSubscribed.AllowedEvent > packageSubscribed.SubscribedEvent)
    {
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary fa fa-plus pull-right" data-toggle="modal" data-target="#myModal">
            Add Event
        </button>

        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Add a new Event</h4>
                    </div>
                    <div class="modal-body">
                        @{
                            Html.RenderPartial("EventPlanning/CreateEventModal", events);
                        }
                    </div>
                </div>
            </div>

        </div>
    }
    else
    {
        <div class="alert alert-info" style="margin-left: 12px;">
            Your Subscription has been exhausted.. Buy a new subscription by clicking <a href="@Url.Action("Pricing", "EventPlannerPackages")" style="color: purple"> here</a>
        </div>
    }
}
@section links{

    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Dashboard", "Home")">My Dashboard</a>
        </li>
    </ol>
}
<div class="card-content table-responsive">
    <table class="table table-hover">
        <thead class="text-primary">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (item.EventDate > DateTime.Now)
                {
                    <td style="color: green">
                        @Html.DisplayFor(modelItem => item.Name)<i class="icon-arrow-up"></i>
                    </td>
                }
                else
                {
                    <td style="color: red">
                        @Html.DisplayFor(modelItem => item.Name)<i class="icon-arrow-down"></i>
                    </td>
                }

                <td>
                    @item.StartDate.ToShortDateString()
                </td>
                <td>
                    @item.EndDate.ToShortDateString()
                </td>
                <td>
                    @Html.ActionLink("Open", "Details", new {id = item.EventId}, new {@class = "btn btn-default btn-lg fa fa-folder-open"})
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>