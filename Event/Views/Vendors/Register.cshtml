@model Event.Data.Objects.Entities.Vendor
@{
    ViewBag.Title = "Register";
    ViewBag.Header = "Vendor Registration";
    Layout = "../Shared/_LayoutOutterForm.cshtml";
}
@using (Html.BeginForm("Register", "Vendors", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal row-fluid"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

    <div class="control-group">
        @Html.LabelFor(model => model.Name, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.LocationId, "Location", new {@class = "control-label"})
        <div class="controls">
            @Html.DropDownListFor(m => m.LocationId, null, new {@class = "span8"})
            @Html.ValidationMessageFor(model => model.LocationId, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Address, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Email, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Mobile, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Mobile, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Mobile, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.BusinessName, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.BusinessName, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.BusinessName, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.BusinessContact, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.BusinessContact, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.BusinessContact, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.VendorServiceId, "Vendor Service", new {@class = "control-label"})
        <div class="controls">
            @Html.DropDownListFor(m => m.VendorServiceId, null, new {@class = "span8"})
            @Html.ValidationMessageFor(model => model.VendorServiceId, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.MinimumPrice, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.MinimumPrice, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.MinimumPrice, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.Password, new {@class = "control-label"})
        <div class="controls">
            @Html.PasswordFor(model => model.Password, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.ConfirmPassword, new {@class = "control-label"})
        <div class="controls">
            @Html.PasswordFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "span8"}})
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="control-group">
        <div class="controls">
            <input type="submit" value="Create" class="btn btn-default"/>
        </div>
    </div>
}