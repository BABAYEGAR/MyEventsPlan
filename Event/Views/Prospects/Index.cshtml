@using Event.Data.Objects.Entities
@using MyEventPlan.Data.DataContext.DataContext
@model IEnumerable<Prospect>

@{
    ViewBag.Title = "List";
    ViewBag.TableHeader = "List of all my propects";
    Layout = "../Shared/_LayoutTable.cshtml";
    var prospects = new Prospect();
    var _db = new EventDataContext();
}
@section css{
    <link href="~/Scripts/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet"/>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
}
@section add {
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary btn-xs icon-plus pull-right" data-toggle="modal" data-target="#myModal">
        Add Prospect
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Add a new prospect</h4>
                </div>
                <div class="modal-body">
                    @{

                        ViewBag.EventTypeId = new SelectList(_db.EventTypes, "EventTypeId", "Name");
                        Html.RenderPartial("CreateProspectModal", prospects);
                    }
                </div>
            </div>
        </div>

    </div>
}
<table class="datatable-1 table table-bordered table-striped display">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EventType.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.EndTime)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EventType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TargetBudget)
            </td>
            <td>
                @item.StartDate.ToShortDateString()
            </td>
            <td>
                @item.EndDate.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.ProspectId}, new {@class = "btn btn-xs btn-primary"})
                @Html.ActionLink("Details", "Details", new {id = item.ProspectId}, new {@class = "btn btn-xs btn-default"})
                @Html.ActionLink("Delete", "Delete", new {id = item.ProspectId}, new {@class = "btn btn-xs btn-danger"})
            </td>
        </tr>
    }
    </tbody>
</table>
@section scripts{
    <script src="~/Scripts/jscolor.min.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        // init datepicker for start date
        $('.startDate').datepicker();

        // init datepicker for start date
        $('.endDate').datepicker();

        // init datepicker for date
        $('.startDate').datepicker({ 'endDate': new Date() });

        // set start date of end date based on selected start date
        $('.startDate')
            .datepicker()
            .on('changeDate',
                function(e) {

                    // apply selected date as start date for expiry
                    $('.endDate').datepicker('setStartDate', e.date);
                });
        $('.timepicker')
            .timepicker({
                timeFormat: 'h:mm p',
                interval: 30,
                minTime: '00:00am',
                maxTime: '11:59pm',
                defaultTime: '10',
                defaultDate: "2016-09-05",
                startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });
    </script>

}