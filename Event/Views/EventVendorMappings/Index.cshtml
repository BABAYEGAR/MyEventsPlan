@using Event.Data.Objects.Entities
@model IEnumerable<EventVendorMapping>
@{
    var events = Session["event"] as Event;
    ViewBag.Title = "List";
    ViewBag.TableHeader = "List of all vedors assigned to " + events?.Name + "!";
      Layout = "../Shared/Layout/_LayoutTable.cshtml";
    var mapping = new EventVendorMapping();
}
@section add {
    @if (events != null)
    {
        @Html.ActionLink("Add vendors", "ListOfVendors", "Vendors", null, new {@class = "btn btn-xs btn-primary pull-right"})
    }


}
@section links{

    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Events")">My Events</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@if (events != null)
                     {
                         @Url.Action("Details", "Events", new {id = events.EventId})
                     }">
                Event Dashboard
            </a>
        </li>
    </ol>
}
<div class="table-responsive">
    <table class="datatable-1 table table-bordered table-striped display">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Vendor.VendorService.ServiceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Vendor.Name)
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Vendor.VendorService.ServiceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Vendor.Name)
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>